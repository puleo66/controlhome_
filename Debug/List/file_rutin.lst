###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       09/Feb/2018  16:14:54
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\HW Projects\ControlHome\CntrHome - RF69w\uC-FatFS\file\file_rutin.c
#    Command line =  
#        "E:\HW Projects\ControlHome\CntrHome -
#        RF69w\uC-FatFS\file\file_rutin.c" -lCN "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\Debug\List" -o "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\Debug\Obj" --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\APP\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\BSP\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\CPU\inc\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-CPU\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-RTC\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-LIB\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uCOS-II\Ports\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uCOS-II\Source\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\I2C-Out\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\Direct_Sw\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\Wdt_led\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-LCD\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-RF\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\api\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\config\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\os\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\fsl\fat\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\clib\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\lbl\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\device\mmc\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\file\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-Terminal\src\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-Terminal\inc\" -Oh
#    List file    =  
#        E:\HW Projects\ControlHome\CntrHome - RF69w\Debug\List\file_rutin.lst
#    Object file  =  
#        E:\HW Projects\ControlHome\CntrHome - RF69w\Debug\Obj\file_rutin.o
#
###############################################################################

E:\HW Projects\ControlHome\CntrHome - RF69w\uC-FatFS\file\file_rutin.c
      1          /*
      2          *********************************************************************************************************
      3          *                                        FILE MODULE SOURCE FILE
      4          *
      5          * Filename      : file.c
      6          * Version       : V0.1
      7          * Programmer(s) : Puleo
      8          *********************************************************************************************************
      9          */
     10          
     11          /*
     12          *********************************************************************************************************
     13          *                                              INCLUDE FILES
     14          *********************************************************************************************************
     15          */
     16          #define  FILE_RUTIN_GLOBALS
     17          #include <includes.h>

   \                                 In section .bss, align 4
     18          
     19          #if FS_MODULE == DEF_ENABLED
     20          
     21          /*
     22          *********************************************************************************************************
     23          *                                            LOCAL CONSTANTS
     24          *********************************************************************************************************
     25          */
     26          
     27          
     28          /*
     29          *********************************************************************************************************
     30          *                                            LOCAL VARIABLES
     31          *********************************************************************************************************
     32          */
     33          
     34           
     35           INT8U name[30];
     36           INT8U name1[30];
     37           INT8U Fstr[20];
   \                     Fstr:
   \   00000000                      DS8 20
   \   __absolute FS_DIR *pDir
   \                     pDir:
   \   00000014                      DS8 4
   \   __absolute struct FS_DIRENT *pDirEnt
   \                     pDirEnt:
   \   00000018                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute INT8U FileBuffer[512]
   \                     FileBuffer:
   \   00000000                      DS8 512

   \                                 In section .data, align 4
   \                     name:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     38           
     39           INT8U logCount = 1;
   \                     logCount:
   \   00000020   0x01               DC8 1
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   \   __absolute FS_FILE *pFile
   \                     pFile:
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \                     name1:
   \   00000028   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000038   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     40          extern INT8U time_buffer[20];
     41          /*
     42          *********************************************************************************************************
     43          *                                        LOCAL FUNCTION PROTOTYPES
     44          *********************************************************************************************************
     45          */
     46          
     47          
     48          
     49          
     50          /*
     51          *********************************************************************************************************
     52          *
     53          *                                        write_file
     54          *
     55          *                      Create and write to a file using the file system.
     56          *********************************************************************************************************
     57          */
     58          

   \                                 In section .text, align 2, keep-with-next
     59          INT8U Write_File(INT8U *name, INT8U *txt) 
     60          {
   \                     Write_File: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x460D             MOV      R5,R1
   \   00000004   0x4604             MOV      R4,R0
     61            INT8U x;
     62            
     63            /* create file */
     64            pFile = FS_FOpen((char const*)name,"w");
   \   00000006   0x....             ADR.N    R1,??DataTable23  ;; "w"
   \   00000008   0x.... 0x....      BL       FS_FOpen
   \   0000000C   0x.... 0x....      LDR.W    R7,??DataTable28_7
   \   00000010   0x0006             MOVS     R6,R0
   \   00000012   0x627E             STR      R6,[R7, #+36]
     65            if (pFile) {
   \   00000014   0xD021             BEQ.N    ??Write_File_0
     66              /* write to file */
     67              x = FS_FWrite(txt,1,strlen((char const*)txt),pFile);
   \   00000016   0x4628             MOV      R0,R5
   \   00000018   0x.... 0x....      BL       strlen
   \   0000001C   0x4602             MOV      R2,R0
   \   0000001E   0x4633             MOV      R3,R6
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x4628             MOV      R0,R5
   \   00000024   0x.... 0x....      BL       FS_FWrite
     68              /* all data written ? */
     69              if (x!=(int)strlen((char const*)txt)) {
   \   00000028   0x6A7E             LDR      R6,[R7, #+36]
   \   0000002A   0xB2C4             UXTB     R4,R0
   \   0000002C   0x4628             MOV      R0,R5
   \   0000002E   0x.... 0x....      BL       strlen
   \   00000032   0x4284             CMP      R4,R0
   \   00000034   0x4630             MOV      R0,R6
   \   00000036   0xD00C             BEQ.N    ??Write_File_1
     70                /* check, why not all data was written */
     71                x = FS_FError(pFile);
   \   00000038   0x.... 0x....      BL       FS_FError
     72                sprintf((char*)FileBuffer,"Not all bytes written because of error %d.\n",x);
   \   0000003C   0xB2C2             UXTB     R2,R0
   \   0000003E   0x.... 0x....      ADR.W    R1,?_1
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable28_8
   \   00000046   0x.... 0x....      BL       sprintf
     73                FS_ClearErr (pFile);
   \   0000004A   0x6A78             LDR      R0,[R7, #+36]
   \   0000004C   0x.... 0x....      BL       FS_ClearErr
     74          //      _error(mybuffer);
     75                return -1;
   \   00000050   0xE00A             B.N      ??Write_File_2
     76              }
     77              /* close file */
     78              FS_FClose(pFile);
   \                     ??Write_File_1: (+1)
   \   00000052   0x.... 0x....      BL       FS_FClose
     79              return 0;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0xBDF2             POP      {R1,R4-R7,PC}
     80            }
     81            else {
     82              sprintf((char*)FileBuffer,"Unable to create file %s\n",name);
   \                     ??Write_File_0: (+1)
   \   0000005A   0x4622             MOV      R2,R4
   \   0000005C   0x.... 0x....      ADR.W    R1,?_2
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable28_8
   \   00000064   0x.... 0x....      BL       sprintf
     83          //   _error(mybuffer);
     84              return -1;
   \                     ??Write_File_2: (+1)
   \   00000068   0x20FF             MOVS     R0,#+255
   \   0000006A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     85            }
     86          }
     87          
     88          
     89          /*
     90          *********************************************************************************************************
     91          *
     92          *                                        Dump_File
     93          *
     94          *                          Open and read from a file using the file system.
     95          *********************************************************************************************************
     96          */
     97          

   \                                 In section .text, align 2, keep-with-next
     98          INT8U Read_File(INT8U *name)
     99          {
   \                     Read_File: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    100            int x;
    101          
    102            /* open file */
    103            pFile = FS_FOpen((char const*)name,"r");
   \   00000004   0x....             ADR.N    R1,??DataTable23_1  ;; "r"
   \   00000006   0x.... 0x....      BL       FS_FOpen
   \   0000000A   0x.... 0x....      LDR.W    R5,??DataTable28_7
    104            if (pFile) {
   \   0000000E   0x.... 0x....      LDR.W    R6,??DataTable28_8
   \   00000012   0x6268             STR      R0,[R5, #+36]
   \   00000014   0xB300             CBZ.N    R0,??Read_File_0
    105              /* read until EOF has been reached */
    106              do {
    107                x = FS_FRead(FileBuffer,1,sizeof(FileBuffer)-1,pFile);
   \                     ??Read_File_1: (+1)
   \   00000016   0x6A6B             LDR      R3,[R5, #+36]
   \   00000018   0xF240 0x12FF      MOVW     R2,#+511
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x4630             MOV      R0,R6
   \   00000020   0x.... 0x....      BL       FS_FRead
    108                FileBuffer[x]=0;
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x5581             STRB     R1,[R0, R6]
    109                if(x < 512){
   \   00000028   0xF5B0 0x7F00      CMP      R0,#+512
   \   0000002C   0xDAF3             BGE.N    ??Read_File_1
    110                  x = 0;
    111                }
    112              } while (x);
    113              /* check, if there is no more data, because of EOF */
    114              x = FS_FError(pFile);
   \   0000002E   0x6A68             LDR      R0,[R5, #+36]
   \   00000030   0x.... 0x....      BL       FS_FError
   \   00000034   0x4602             MOV      R2,R0
    115              if (x!=FS_ERR_EOF) {
   \   00000036   0xF112 0x0F10      CMN      R2,#+16
   \   0000003A   0xD008             BEQ.N    ??Read_File_2
    116                /* there was a problem during read operation */
    117                sprintf((char*)FileBuffer,"Error %d during read operation.\n",x);
   \   0000003C   0x.... 0x....      ADR.W    R1,?_4
   \   00000040   0x4630             MOV      R0,R6
   \   00000042   0x.... 0x....      BL       sprintf
    118                FS_ClearErr (pFile);
   \   00000046   0x6A68             LDR      R0,[R5, #+36]
   \   00000048   0x.... 0x....      BL       FS_ClearErr
    119          //      _error(mybuffer);
    120                return -1;
   \   0000004C   0xE00A             B.N      ??Read_File_3
    121              }
    122              /* close file */
    123              FS_FClose(pFile);
   \                     ??Read_File_2: (+1)
   \   0000004E   0x6A68             LDR      R0,[R5, #+36]
   \   00000050   0x.... 0x....      BL       FS_FClose
    124              return 0;
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0xBD70             POP      {R4-R6,PC}
    125            }
    126            else {
    127              sprintf((char*)FileBuffer,"Unable to open file %s.\n",name);
   \                     ??Read_File_0: (+1)
   \   00000058   0x4622             MOV      R2,R4
   \   0000005A   0x.... 0x....      ADR.W    R1,?_5
   \   0000005E   0x4630             MOV      R0,R6
   \   00000060   0x.... 0x....      BL       sprintf
    128          //    _error(mybuffer);
    129              return -1;
   \                     ??Read_File_3: (+1)
   \   00000064   0x20FF             MOVS     R0,#+255
   \   00000066   0xBD70             POP      {R4-R6,PC}       ;; return
    130            }
    131          }
    132          
    133          /*
    134          *********************************************************************************************************
    135          *
    136          *                                        Delete_File
    137          *
    138          *                          Open and delete from a file using the file system.
    139          *********************************************************************************************************
    140          */
    141          

   \                                 In section .text, align 2, keep-with-next
    142          INT8U Delete_File(INT8U *name)
    143          {
   \                     Delete_File: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    144            /* open file */
    145            pFile = FS_FOpen((char const*)name,"r");
   \   00000004   0x....             ADR.N    R1,??DataTable23_1  ;; "r"
   \   00000006   0x.... 0x....      BL       FS_FOpen
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable28_7
   \   0000000E   0x6248             STR      R0,[R1, #+36]
    146            if (pFile) {
   \   00000010   0xB148             CBZ.N    R0,??Delete_File_0
    147              /* close file */
    148              FS_FClose(pFile);
   \   00000012   0x.... 0x....      BL       FS_FClose
    149              if (FS_Remove((char const*)name)!= 0){
   \   00000016   0x4620             MOV      R0,R4
   \   00000018   0x.... 0x....      BL       FS_Remove
   \   0000001C   0xB158             CBZ.N    R0,??Delete_File_1
    150                sprintf((char*)FileBuffer,"Unable to delete file %s.\n",name);
   \   0000001E   0x4622             MOV      R2,R4
   \   00000020   0x.... 0x....      ADR.W    R1,?_6
   \   00000024   0xE002             B.N      ??Delete_File_2
    151                return -1;
    152              }
    153              return 0;
    154            }
    155            else {
    156              sprintf((char*)FileBuffer,"Unable to open file %s.\n",name);
   \                     ??Delete_File_0: (+1)
   \   00000026   0x4622             MOV      R2,R4
   \   00000028   0x.... 0x....      ADR.W    R1,?_5
   \                     ??Delete_File_2: (+1)
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable28_8
   \   00000030   0x.... 0x....      BL       sprintf
    157              return -1;
   \   00000034   0x20FF             MOVS     R0,#+255
   \                     ??Delete_File_1: (+1)
   \   00000036   0xBD10             POP      {R4,PC}          ;; return
    158            }
    159          }
    160          
    161          /*
    162          *********************************************************************************************************
    163          *
    164          *                                        Rename_File
    165          *
    166          *                          Read, delete and write from a file using the file system.
    167          *********************************************************************************************************
    168          */
    169          

   \                                 In section .text, align 2, keep-with-next
    170          INT8U Rename_File(INT8U *oldname, INT8U *newname)
    171          {
   \                     Rename_File: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    172            /* read file */
    173            if (Read_File(oldname)== 0){
   \   00000006   0x.... 0x....      BL       Read_File
   \   0000000A   0x.... 0x....      LDR.W    R6,??DataTable28_8
   \   0000000E   0xBB20             CBNZ.N   R0,??Rename_File_0
    174              /* delete file */
    175              if (Delete_File(oldname) == 0){
   \   00000010   0x....             ADR.N    R1,??DataTable23_1  ;; "r"
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       FS_FOpen
   \   00000018   0x....             LDR.N    R1,??DataTable28_7
   \   0000001A   0x6248             STR      R0,[R1, #+36]
   \   0000001C   0xB1A8             CBZ.N    R0,??Rename_File_1
   \   0000001E   0x.... 0x....      BL       FS_FClose
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0x.... 0x....      BL       FS_Remove
   \   00000028   0xB148             CBZ.N    R0,??Rename_File_2
   \   0000002A   0x4622             MOV      R2,R4
   \   0000002C   0x.... 0x....      ADR.W    R1,?_6
   \                     ??Rename_File_3: (+1)
   \   00000030   0x4630             MOV      R0,R6
   \   00000032   0x.... 0x....      BL       sprintf
    176                /* write file */
    177                if(Write_File(newname, FileBuffer) != 0){
    178                  sprintf((char*)FileBuffer,"Unable to rename file %s\n",newname);
    179                  return -1;
    180                }
    181                return 0;
    182              }else{
    183                sprintf((char*)FileBuffer,"Unable to delete file %s.\n",oldname);
   \   00000036   0x4622             MOV      R2,R4
   \   00000038   0x.... 0x....      ADR.W    R1,?_6
   \   0000003C   0xE010             B.N      ??Rename_File_4
    184                return -1;
    185              }
   \                     ??Rename_File_2: (+1)
   \   0000003E   0x4631             MOV      R1,R6
   \   00000040   0x4628             MOV      R0,R5
   \   00000042   0x.... 0x....      BL       Write_File
   \   00000046   0xB920             CBNZ.N   R0,??Rename_File_5
   \   00000048   0xBD70             POP      {R4-R6,PC}
   \                     ??Rename_File_1: (+1)
   \   0000004A   0x4622             MOV      R2,R4
   \   0000004C   0x.... 0x....      ADR.W    R1,?_5
   \   00000050   0xE7EE             B.N      ??Rename_File_3
   \                     ??Rename_File_5: (+1)
   \   00000052   0x462A             MOV      R2,R5
   \   00000054   0x.... 0x....      ADR.W    R1,?_7
   \   00000058   0xE002             B.N      ??Rename_File_4
    186            }else {
    187              sprintf((char*)FileBuffer,"Unable to read file %s.\n",oldname);
   \                     ??Rename_File_0: (+1)
   \   0000005A   0x4622             MOV      R2,R4
   \   0000005C   0x.... 0x....      ADR.W    R1,?_8
   \                     ??Rename_File_4: (+1)
   \   00000060   0x4630             MOV      R0,R6
   \   00000062   0x.... 0x....      BL       sprintf
    188              return -1;
   \   00000066   0x20FF             MOVS     R0,#+255
   \   00000068   0xBD70             POP      {R4-R6,PC}       ;; return
    189            }
    190          }
    191          
    192          /*
    193          *********************************************************************************************************
    194          *
    195          *                                        Log_File
    196          *
    197          *                            Create,update log file or error file
    198          *********************************************************************************************************
    199          */
    200          

   \                                 In section .text, align 2, keep-with-next
    201          INT8U Log_File(INT8U *txt)
    202          { 
   \                     Log_File: (+1)
   \   00000000   0xE92D 0x4FF1      PUSH     {R0,R4-R11,LR}
    203            INT8U i, j;  
    204            INT8U patch[] = "mmc:0:\\log\\";
   \   00000004   0x.... 0x....      ADR.W    R1,?_9
    205            
    206            FileBuffer[0] = '\0';
   \   00000008   0x....             LDR.N    R5,??DataTable28_7
   \   0000000A   0x.... 0x....      LDR.W    R8,??DataTable28_9
   \   0000000E   0x....             LDR.N    R7,??DataTable28_10
   \   00000010   0xB084             SUB      SP,SP,#+16
   \   00000012   0xC91C             LDM      R1!,{R2-R4}
   \   00000014   0x4668             MOV      R0,SP
   \   00000016   0xC01C             STM      R0!,{R2-R4}
   \   00000018   0x....             LDR.N    R4,??DataTable28_8
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x7020             STRB     R0,[R4, #+0]
    207            Get_Time_Now();
   \   0000001E   0x.... 0x....      BL       Get_Time_Now
    208            //Set Date string
    209            j = strlen((char const*)patch);
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x.... 0x....      BL       strlen
   \   00000028   0xB2C6             UXTB     R6,R0
    210            sprintf((char*)name, "%s",patch);
   \   0000002A   0x466A             MOV      R2,SP
   \   0000002C   0x....             ADR.N    R1,??DataTable28  ;; 0x25, 0x73, 0x00, 0x00
   \   0000002E   0x4628             MOV      R0,R5
   \   00000030   0x.... 0x....      BL       sprintf
    211            
    212            name[0 + j] = time_buffer[2];
   \   00000034   0x1976             ADDS     R6,R6,R5
   \   00000036   0xF898 0x0002      LDRB     R0,[R8, #+2]
   \   0000003A   0x7030             STRB     R0,[R6, #+0]
    213            name[1 + j] = time_buffer[3];
    214            name[2 + j] = time_buffer[5];
    215            name[3 + j] = time_buffer[6];
    216            name[4 + j] = time_buffer[8];
    217            name[5 + j] = time_buffer[9];
    218            name[6 + j] = '_';              
    219            name[7 + j] = '0';
    220            name[8 + j] = '.';
    221            strcat((char*)name,(char const*)"log");
   \   0000003C   0x....             ADR.N    R1,??DataTable28_1  ;; "log"
   \   0000003E   0xF898 0x0003      LDRB     R0,[R8, #+3]
   \   00000042   0x7070             STRB     R0,[R6, #+1]
   \   00000044   0xF898 0x0005      LDRB     R0,[R8, #+5]
   \   00000048   0x70B0             STRB     R0,[R6, #+2]
   \   0000004A   0xF898 0x0006      LDRB     R0,[R8, #+6]
   \   0000004E   0x70F0             STRB     R0,[R6, #+3]
   \   00000050   0xF898 0x0008      LDRB     R0,[R8, #+8]
   \   00000054   0x7130             STRB     R0,[R6, #+4]
   \   00000056   0xF898 0x0009      LDRB     R0,[R8, #+9]
   \   0000005A   0x7170             STRB     R0,[R6, #+5]
   \   0000005C   0x205F             MOVS     R0,#+95
   \   0000005E   0x71B0             STRB     R0,[R6, #+6]
   \   00000060   0x2030             MOVS     R0,#+48
   \   00000062   0x71F0             STRB     R0,[R6, #+7]
   \   00000064   0x202E             MOVS     R0,#+46
   \   00000066   0x7230             STRB     R0,[R6, #+8]
   \   00000068   0x4628             MOV      R0,R5
   \   0000006A   0x.... 0x....      BL       strcat
    222            
    223            //Set Time string
    224            Fstr[0] = time_buffer[11];
   \   0000006E   0xF898 0x000B      LDRB     R0,[R8, #+11]
   \   00000072   0x7038             STRB     R0,[R7, #+0]
    225            Fstr[1] = time_buffer[12];
    226            Fstr[2] = ':';
    227            Fstr[3] = time_buffer[14];
    228            Fstr[4] = time_buffer[15];
    229            Fstr[5] = ':';
    230            Fstr[6] = time_buffer[17];
    231            Fstr[7] = time_buffer[18];
    232            Fstr[8] = ' ';
    233            
    234            strcpy((char*)FileBuffer,(char const*)Fstr);
   \   00000074   0x4639             MOV      R1,R7
   \   00000076   0xF898 0x000C      LDRB     R0,[R8, #+12]
   \   0000007A   0x7078             STRB     R0,[R7, #+1]
   \   0000007C   0x203A             MOVS     R0,#+58
   \   0000007E   0x70B8             STRB     R0,[R7, #+2]
   \   00000080   0xF898 0x000E      LDRB     R0,[R8, #+14]
   \   00000084   0x70F8             STRB     R0,[R7, #+3]
   \   00000086   0xF898 0x000F      LDRB     R0,[R8, #+15]
   \   0000008A   0x7138             STRB     R0,[R7, #+4]
   \   0000008C   0x203A             MOVS     R0,#+58
   \   0000008E   0x7178             STRB     R0,[R7, #+5]
   \   00000090   0xF898 0x0011      LDRB     R0,[R8, #+17]
   \   00000094   0x71B8             STRB     R0,[R7, #+6]
   \   00000096   0xF898 0x0012      LDRB     R0,[R8, #+18]
   \   0000009A   0x71F8             STRB     R0,[R7, #+7]
   \   0000009C   0x.... 0x....      ADR.W    R8,??DataTable28_2  ;; 0x0D, 0x0A, 0x00, 0x00
   \   000000A0   0x2020             MOVS     R0,#+32
   \   000000A2   0x7238             STRB     R0,[R7, #+8]
   \   000000A4   0x4620             MOV      R0,R4
   \   000000A6   0x.... 0x....      BL       strcpy
    235            strcat((char*)FileBuffer,(char const*)txt);
   \   000000AA   0x9904             LDR      R1,[SP, #+16]
   \   000000AC   0x.... 0x....      BL       strcat
    236            strcat((char*)FileBuffer,(char const*)"\r\n");
   \   000000B0   0x4641             MOV      R1,R8
   \   000000B2   0x4620             MOV      R0,R4
   \   000000B4   0x.... 0x....      BL       strcat
    237            
    238            i = strlen((char const*)FileBuffer);
   \   000000B8   0x.... 0x....      BL       strlen
   \   000000BC   0x4681             MOV      R9,R0
    239            
    240            /* read file */
    241            if (Read_File(name)!= 0){
   \   000000BE   0x4628             MOV      R0,R5
   \   000000C0   0x.... 0x....      BL       Read_File
   \   000000C4   0x2800             CMP      R0,#+0
   \   000000C6   0xD058             BEQ.N    ??Log_File_0
    242              if (strlen((char const*)FileBuffer) + i > 512){
   \   000000C8   0x4620             MOV      R0,R4
   \   000000CA   0x.... 0x....      BL       strlen
   \   000000CE   0xFA5F 0xF189      UXTB     R1,R9
   \   000000D2   0x4408             ADD      R0,R1,R0
   \   000000D4   0xF5B0 0x7F00      CMP      R0,#+512
   \   000000D8   0xD94F             BLS.N    ??Log_File_0
    243                for(i=logCount; i > 0; i--){
   \   000000DA   0xF895 0xB020      LDRB     R11,[R5, #+32]
   \   000000DE   0xF1BB 0x0F00      CMP      R11,#+0
   \   000000E2   0xD045             BEQ.N    ??Log_File_1
   \   000000E4   0x.... 0x....      ADR.W    R9,?_6
   \   000000E8   0x.... 0x....      ADR.W    R10,??DataTable28_3  ;; 0x25, 0x64, 0x00, 0x00
    244                  sprintf((char*)name[7 + j],"%d",logCount);    // xxx_0.log -> xxx_1.log
   \                     ??Log_File_2: (+1)
   \   000000EC   0xF895 0x2020      LDRB     R2,[R5, #+32]
   \   000000F0   0x79F0             LDRB     R0,[R6, #+7]
   \   000000F2   0x4651             MOV      R1,R10
   \   000000F4   0x.... 0x....      BL       sprintf
    245                  strcpy((char*)name1,(char const*)name);
   \   000000F8   0x4629             MOV      R1,R5
   \   000000FA   0xF105 0x0028      ADD      R0,R5,#+40
   \   000000FE   0x.... 0x....      BL       strcpy
    246                  sprintf((char*)name[7 + j],"%d",logCount-1);
   \   00000102   0xF895 0x0020      LDRB     R0,[R5, #+32]
   \   00000106   0x1E42             SUBS     R2,R0,#+1
   \   00000108   0x79F0             LDRB     R0,[R6, #+7]
   \   0000010A   0x4651             MOV      R1,R10
   \   0000010C   0x.... 0x....      BL       sprintf
    247                  
    248                  
    249                  Rename_File(name, name1);
   \   00000110   0x4628             MOV      R0,R5
   \   00000112   0x.... 0x....      BL       Read_File
   \   00000116   0xBB10             CBNZ.N   R0,??Log_File_3
   \   00000118   0x....             ADR.N    R1,??DataTable28_4  ;; "r"
   \   0000011A   0x4628             MOV      R0,R5
   \   0000011C   0x.... 0x....      BL       FS_FOpen
   \   00000120   0x6268             STR      R0,[R5, #+36]
   \   00000122   0xB1C0             CBZ.N    R0,??Log_File_4
   \   00000124   0x.... 0x....      BL       FS_FClose
   \   00000128   0x4628             MOV      R0,R5
   \   0000012A   0x.... 0x....      BL       FS_Remove
   \   0000012E   0xB138             CBZ.N    R0,??Log_File_5
   \   00000130   0x462A             MOV      R2,R5
   \   00000132   0x4649             MOV      R1,R9
   \                     ??Log_File_6: (+1)
   \   00000134   0x4620             MOV      R0,R4
   \   00000136   0x.... 0x....      BL       sprintf
   \   0000013A   0x462A             MOV      R2,R5
   \   0000013C   0x4649             MOV      R1,R9
   \   0000013E   0xE011             B.N      ??Log_File_7
   \                     ??Log_File_5: (+1)
   \   00000140   0x4621             MOV      R1,R4
   \   00000142   0xF105 0x0028      ADD      R0,R5,#+40
   \   00000146   0x.... 0x....      BL       Write_File
   \   0000014A   0xB170             CBZ.N    R0,??Log_File_8
   \   0000014C   0xF105 0x0228      ADD      R2,R5,#+40
   \   00000150   0x.... 0x....      ADR.W    R1,?_7
   \   00000154   0xE006             B.N      ??Log_File_7
   \                     ??Log_File_4: (+1)
   \   00000156   0x462A             MOV      R2,R5
   \   00000158   0x.... 0x....      ADR.W    R1,?_5
   \   0000015C   0xE7EA             B.N      ??Log_File_6
   \                     ??Log_File_3: (+1)
   \   0000015E   0x462A             MOV      R2,R5
   \   00000160   0x.... 0x....      ADR.W    R1,?_8
   \                     ??Log_File_7: (+1)
   \   00000164   0x4620             MOV      R0,R4
   \   00000166   0x.... 0x....      BL       sprintf
    250                }
   \                     ??Log_File_8: (+1)
   \   0000016A   0xF1BB 0x0B01      SUBS     R11,R11,#+1
   \   0000016E   0xD1BD             BNE.N    ??Log_File_2
    251                logCount++;
   \                     ??Log_File_1: (+1)
   \   00000170   0xF895 0x0020      LDRB     R0,[R5, #+32]
   \   00000174   0x1C40             ADDS     R0,R0,#+1
   \   00000176   0xF885 0x0020      STRB     R0,[R5, #+32]
    252              }
    253            }else{
    254          //    FileBuffer[0] = '\0';
    255            }
    256            
    257            strcat((char*)FileBuffer,(char const*)Fstr);   // Date string
   \                     ??Log_File_0: (+1)
   \   0000017A   0x4639             MOV      R1,R7
   \   0000017C   0x4620             MOV      R0,R4
   \   0000017E   0x.... 0x....      BL       strcat
    258            strcat((char*)FileBuffer,(char const*)txt);    // Message string
   \   00000182   0x9904             LDR      R1,[SP, #+16]
   \   00000184   0x.... 0x....      BL       strcat
    259            strcat((char*)FileBuffer,(char const*)"\r\n");
   \   00000188   0x4641             MOV      R1,R8
   \   0000018A   0x4620             MOV      R0,R4
   \   0000018C   0x.... 0x....      BL       strcat
    260            /* write file */
    261            
    262            if(Write_File(name, FileBuffer) != 0){
   \   00000190   0x....             ADR.N    R1,??DataTable28_5  ;; "w"
   \   00000192   0x4628             MOV      R0,R5
   \   00000194   0x.... 0x....      BL       FS_FOpen
   \   00000198   0x0006             MOVS     R6,R0
   \   0000019A   0x626E             STR      R6,[R5, #+36]
   \   0000019C   0xD020             BEQ.N    ??Log_File_9
   \   0000019E   0x4620             MOV      R0,R4
   \   000001A0   0x.... 0x....      BL       strlen
   \   000001A4   0x4602             MOV      R2,R0
   \   000001A6   0x4633             MOV      R3,R6
   \   000001A8   0x2101             MOVS     R1,#+1
   \   000001AA   0x4620             MOV      R0,R4
   \   000001AC   0x.... 0x....      BL       FS_FWrite
   \   000001B0   0x6A6F             LDR      R7,[R5, #+36]
   \   000001B2   0xB2C6             UXTB     R6,R0
   \   000001B4   0x4620             MOV      R0,R4
   \   000001B6   0x.... 0x....      BL       strlen
   \   000001BA   0x4286             CMP      R6,R0
   \   000001BC   0x4638             MOV      R0,R7
   \   000001BE   0xD00B             BEQ.N    ??Log_File_10
   \   000001C0   0x.... 0x....      BL       FS_FError
   \   000001C4   0xB2C2             UXTB     R2,R0
   \   000001C6   0x.... 0x....      ADR.W    R1,?_1
   \   000001CA   0x4620             MOV      R0,R4
   \   000001CC   0x.... 0x....      BL       sprintf
   \   000001D0   0x6A68             LDR      R0,[R5, #+36]
   \   000001D2   0x.... 0x....      BL       FS_ClearErr
   \   000001D6   0xE009             B.N      ??Log_File_11
   \                     ??Log_File_10: (+1)
   \   000001D8   0x.... 0x....      BL       FS_FClose
    263              sprintf((char*)FileBuffer,"Unable to write file %s\n",name);
    264              return -1;
    265            }
    266            return 0;
   \   000001DC   0x2000             MOVS     R0,#+0
   \   000001DE   0x....             B.N      ?Subroutine0
   \                     ??Log_File_9: (+1)
   \   000001E0   0x462A             MOV      R2,R5
   \   000001E2   0x.... 0x....      ADR.W    R1,?_2
   \   000001E6   0x4620             MOV      R0,R4
   \   000001E8   0x.... 0x....      BL       sprintf
   \                     ??Log_File_11: (+1)
   \   000001EC   0x462A             MOV      R2,R5
   \   000001EE   0x.... 0x....      ADR.W    R1,?_14
   \   000001F2   0x4620             MOV      R0,R4
   \   000001F4   0x.... 0x....      BL       sprintf
   \   000001F8   0x20FF             MOVS     R0,#+255
   \   000001FA                      REQUIRE ?Subroutine0
   \   000001FA                      ;; // Fall through to label ?Subroutine0
    267          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xB005             ADD      SP,SP,#+20
   \   00000002   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    268          
    269          /*
    270          *********************************************************************************************************
    271          *
    272          *                                           Create_Directory
    273          *
    274          *                                          Create a directory.
    275          *********************************************************************************************************
    276          */
    277          
    278          #if FS_POSIX_DIR_SUPPORT
    279          

   \                                 In section .text, align 2, keep-with-next
    280          void Create_Directory(INT8U *name) 
    281          {
   \                     Create_Directory: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    282            pDir = FS_OpenDir((char const*)name);
   \   00000004   0x.... 0x....      BL       FS_OpenDir
   \   00000008   0x....             LDR.N    R1,??DataTable28_10
   \   0000000A   0x6148             STR      R0,[R1, #+20]
    283            if (!pDir) {
   \   0000000C   0xB938             CBNZ.N   R0,??Create_Directory_0
    284              if (FS_MkDir((char const*)name)!= 0){
   \   0000000E   0x4620             MOV      R0,R4
   \   00000010   0x.... 0x....      BL       FS_MkDir
   \   00000014   0xB138             CBZ.N    R0,??Create_Directory_1
    285                sprintf((char*)FileBuffer,"Unable to create directory %s.\n",name);
   \   00000016   0x4622             MOV      R2,R4
   \   00000018   0x.... 0x....      ADR.W    R1,?_15
   \   0000001C   0xE002             B.N      ??Create_Directory_2
    286              }
    287            }else {
    288              sprintf((char*)FileBuffer,"Unable to open directory %s.\n",name);
   \                     ??Create_Directory_0: (+1)
   \   0000001E   0x4622             MOV      R2,R4
   \   00000020   0x.... 0x....      ADR.W    R1,?_16
    289            }
   \                     ??Create_Directory_2: (+1)
   \   00000024   0x....             B.N      ?Subroutine1
    290          }
   \                     ??Create_Directory_1: (+1)
   \   00000026   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable28_8
   \   00000002   0xE8BD 0x4010      POP      {R4,LR}
   \   00000006   0x.... 0x....      B.W      sprintf
    291          #endif /* FS_POSIX_DIR_SUPPORT */
    292          
    293          /*
    294          *********************************************************************************************************
    295          *
    296          *                                           Del_Directory
    297          *
    298          *                                          Delete a directory.
    299          *********************************************************************************************************
    300          */
    301          
    302          #if FS_POSIX_DIR_SUPPORT
    303          

   \                                 In section .text, align 2, keep-with-next
    304          void Del_Directory(INT8U *name) 
    305          {
   \                     Del_Directory: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    306            pDir = FS_OpenDir((char const*)name);
   \   00000004   0x.... 0x....      BL       FS_OpenDir
   \   00000008   0x....             LDR.N    R1,??DataTable28_10
   \   0000000A   0x6148             STR      R0,[R1, #+20]
    307            if (pDir) {
   \   0000000C   0xB148             CBZ.N    R0,??Del_Directory_0
    308              FS_CloseDir(pDir);
   \   0000000E   0x.... 0x....      BL       FS_CloseDir
    309              if (FS_RmDir((char const*)name)!= 0){
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       FS_RmDir
   \   00000018   0xB138             CBZ.N    R0,??Del_Directory_1
    310                sprintf((char*)FileBuffer,"Unable to delete directory %s.\n",name);
   \   0000001A   0x4622             MOV      R2,R4
   \   0000001C   0x.... 0x....      ADR.W    R1,?_17
   \   00000020   0xE002             B.N      ??Del_Directory_2
    311              }
    312            }
    313            else {
    314              sprintf((char*)FileBuffer,"Unable to open directory %s.\n",name);
   \                     ??Del_Directory_0: (+1)
   \   00000022   0x4622             MOV      R2,R4
   \   00000024   0x.... 0x....      ADR.W    R1,?_16
    315            }
   \                     ??Del_Directory_2: (+1)
   \   00000028   0x....             B.N      ?Subroutine1
    316          }
   \                     ??Del_Directory_1: (+1)
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
    317          #endif /* FS_POSIX_DIR_SUPPORT */
    318          
    319          /*
    320          *********************************************************************************************************
    321          *
    322          *                                           Read_Directory
    323          *
    324          *                                          Read a directory.
    325          *********************************************************************************************************
    326          */
    327          
    328          #if FS_POSIX_DIR_SUPPORT
    329          

   \                                 In section .text, align 2, keep-with-next
    330          void Read_Directory(INT8U *name) 
    331          {  
   \                     Read_Directory: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    332            FileBuffer[0] = '\0';
   \   00000002   0x....             LDR.N    R4,??DataTable28_8
   \   00000004   0x....             LDR.N    R5,??DataTable28_10
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x7021             STRB     R1,[R4, #+0]
    333            pDir = FS_OpenDir((char const*)name);
   \   0000000A   0x.... 0x....      BL       FS_OpenDir
   \   0000000E   0x6168             STR      R0,[R5, #+20]
    334            if (pDir) {
   \   00000010   0xB300             CBZ.N    R0,??Read_Directory_0
    335              do {
    336                pDirEnt = FS_ReadDir(pDir);
   \                     ??Read_Directory_1: (+1)
   \   00000012   0x6968             LDR      R0,[R5, #+20]
   \   00000014   0x.... 0x....      BL       FS_ReadDir
   \   00000018   0x61A8             STR      R0,[R5, #+24]
    337                if (pDirEnt) {
   \   0000001A   0xB198             CBZ.N    R0,??Read_Directory_2
    338                  
    339                  sprintf((char*)Fstr,"%s\n",pDirEnt->d_name);
   \   0000001C   0x1D02             ADDS     R2,R0,#+4
   \   0000001E   0x....             ADR.N    R1,??DataTable28_6  ;; "%s\n"
   \   00000020   0x4628             MOV      R0,R5
   \   00000022   0x.... 0x....      BL       sprintf
    340                  FileBuffer[strlen((char const *)FileBuffer) +1] = '\0';
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       strlen
   \   0000002C   0x1900             ADDS     R0,R0,R4
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x7041             STRB     R1,[R0, #+1]
    341                  strcat((char*)FileBuffer,(char const *)Fstr);
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0x4629             MOV      R1,R5
   \   00000036   0x.... 0x....      BL       strcat
    342                  Fstr[0] = '\0';
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x7028             STRB     R0,[R5, #+0]
    343                }
    344              } while (pDirEnt);
   \   0000003E   0x69A8             LDR      R0,[R5, #+24]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD1E6             BNE.N    ??Read_Directory_1
    345              FS_CloseDir(pDir);
   \                     ??Read_Directory_2: (+1)
   \   00000044   0x6968             LDR      R0,[R5, #+20]
   \   00000046   0x.... 0x....      BL       FS_CloseDir
    346              printf((char*)FileBuffer);
   \   0000004A   0x4620             MOV      R0,R4
   \   0000004C   0xE8BD 0x4032      POP      {R1,R4,R5,LR}
   \   00000050   0x.... 0x....      B.W      printf
    347            }
    348            else {
    349          //    _error("Unable to open directory\n");
    350            }
    351          }
   \                     ??Read_Directory_0: (+1)
   \   00000054   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    352          #endif /* FS_POSIX_DIR_SUPPORT */
    353          
    354          
    355          /*
    356          *********************************************************************************************************
    357          *
    358          *                                             Show_Free
    359          *
    360          *                                     Read disk space information.
    361          *********************************************************************************************************
    362          */
    363          

   \                                 In section .text, align 2, keep-with-next
    364          void Show_Free(INT8U *device) 
    365          {
   \                     Show_Free: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    366            FS_DISKFREE_T disk_data;
    367            INT8U x;
    368          
    369            x = FS_IoCtl((char const*)device,FS_CMD_GET_DISKFREE,0,(void*) &disk_data);
    370            if (x==0) {
   \   00000004   0xAB02             ADD      R3,SP,#+8
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0xF44F 0x617A      MOV      R1,#+4000
   \   0000000C   0x.... 0x....      BL       FS_IoCtl
   \   00000010   0xB2C0             UXTB     R0,R0
   \   00000012   0xB960             CBNZ.N   R0,??Show_Free_0
    371              sprintf((char*)FileBuffer,"total clusters     : %lu\navailable clusters : %lu\nsectors/cluster    : %u\nbytes per sector   : %u\n",
    372                    disk_data.total_clusters, disk_data.avail_clusters, disk_data.sectors_per_cluster, disk_data.bytes_per_sector);
   \   00000014   0xF8BD 0x0012      LDRH     R0,[SP, #+18]
   \   00000018   0x9B03             LDR      R3,[SP, #+12]
   \   0000001A   0x9A02             LDR      R2,[SP, #+8]
   \   0000001C   0x.... 0x....      ADR.W    R1,?_19
   \   00000020   0x9001             STR      R0,[SP, #+4]
   \   00000022   0xF8BD 0x0010      LDRH     R0,[SP, #+16]
   \   00000026   0x9000             STR      R0,[SP, #+0]
   \   00000028   0x....             LDR.N    R0,??DataTable28_8
   \   0000002A   0x.... 0x....      BL       sprintf
    373          //    _log(mybuffer);
    374            } 
    375            else {
    376          //    _error("Invalid drive specified\n");
    377            }
    378          }
   \                     ??Show_Free_0: (+1)
   \   0000002E   0xB005             ADD      SP,SP,#+20
   \   00000030   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x77 0x00          DC8      "w",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_1:
   \   00000000   0x72 0x00          DC8      "r",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x25 0x73          DC8      0x25, 0x73, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_1:
   \   00000000   0x6C 0x6F          DC8      "log"
   \              0x67 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_2:
   \   00000000   0x0D 0x0A          DC8      0x0D, 0x0A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_3:
   \   00000000   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_4:
   \   00000000   0x72 0x00          DC8      "r",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_5:
   \   00000000   0x77 0x00          DC8      "w",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_6:
   \   00000000   0x25 0x73          DC8      "%s\n"
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_7:
   \   00000000   0x........         DC32     name

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_8:
   \   00000000   0x........         DC32     FileBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_9:
   \   00000000   0x........         DC32     time_buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_10:
   \   00000000   0x........         DC32     Fstr

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x4E 0x6F          DC8 "Not all bytes written because of error %d.\012"
   \              0x74 0x20    
   \              0x61 0x6C    
   \              0x6C 0x20    
   \              0x62 0x79    
   \              0x74 0x65    
   \              0x73 0x20    
   \              0x77 0x72    
   \              0x69 0x74    
   \              0x74 0x65    
   \              0x6E 0x20    
   \              0x62 0x65    
   \              0x63 0x61    
   \              0x75 0x73    
   \              0x65 0x20    
   \              0x6F 0x66    
   \              0x20 0x65    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x25    
   \              0x64 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x55 0x6E          DC8 "Unable to create file %s\012"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x63 0x72    
   \              0x65 0x61    
   \              0x74 0x65    
   \              0x20 0x66    
   \              0x69 0x6C    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x45 0x72          DC8 "Error %d during read operation.\012"
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x25 0x64    
   \              0x20 0x64    
   \              0x75 0x72    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x72 0x65    
   \              0x61 0x64    
   \              0x20 0x6F    
   \              0x70 0x65    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x2E 0x0A    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x55 0x6E          DC8 "Unable to open file %s.\012"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x6F 0x70    
   \              0x65 0x6E    
   \              0x20 0x66    
   \              0x69 0x6C    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x2E 0x0A    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x55 0x6E          DC8 "Unable to delete file %s.\012"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x64 0x65    
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x20 0x66    
   \              0x69 0x6C    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x2E 0x0A    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x55 0x6E          DC8 "Unable to rename file %s\012"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x72 0x65    
   \              0x6E 0x61    
   \              0x6D 0x65    
   \              0x20 0x66    
   \              0x69 0x6C    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x55 0x6E          DC8 "Unable to read file %s.\012"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x72 0x65    
   \              0x61 0x64    
   \              0x20 0x66    
   \              0x69 0x6C    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x2E 0x0A    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x6D 0x6D          DC8 "mmc:0:\\log\\"
   \              0x63 0x3A    
   \              0x30 0x3A    
   \              0x5C 0x6C    
   \              0x6F 0x67    
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x55 0x6E          DC8 "Unable to write file %s\012"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x77 0x72    
   \              0x69 0x74    
   \              0x65 0x20    
   \              0x66 0x69    
   \              0x6C 0x65    
   \              0x20 0x25    
   \              0x73 0x0A    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x55 0x6E          DC8 "Unable to create directory %s.\012"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x63 0x72    
   \              0x65 0x61    
   \              0x74 0x65    
   \              0x20 0x64    
   \              0x69 0x72    
   \              0x65 0x63    
   \              0x74 0x6F    
   \              0x72 0x79    
   \              0x20 0x25    
   \              0x73 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x55 0x6E          DC8 "Unable to open directory %s.\012"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x6F 0x70    
   \              0x65 0x6E    
   \              0x20 0x64    
   \              0x69 0x72    
   \              0x65 0x63    
   \              0x74 0x6F    
   \              0x72 0x79    
   \              0x20 0x25    
   \              0x73 0x2E    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x55 0x6E          DC8 "Unable to delete directory %s.\012"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x64 0x65    
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x20 0x64    
   \              0x69 0x72    
   \              0x65 0x63    
   \              0x74 0x6F    
   \              0x72 0x79    
   \              0x20 0x25    
   \              0x73 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x74 0x6F          DC8 74H, 6FH, 74H, 61H, 6CH, 20H, 63H, 6CH
   \              0x74 0x61    
   \              0x6C 0x20    
   \              0x63 0x6C    
   \   00000008   0x75 0x73          DC8 75H, 73H, 74H, 65H, 72H, 73H, 20H, 20H
   \              0x74 0x65    
   \              0x72 0x73    
   \              0x20 0x20    
   \   00000010   0x20 0x20          DC8 20H, 20H, 20H, 3AH, 20H, 25H, 6CH, 75H
   \              0x20 0x3A    
   \              0x20 0x25    
   \              0x6C 0x75    
   \   00000018   0x0A 0x61          DC8 0AH, 61H, 76H, 61H, 69H, 6CH, 61H, 62H
   \              0x76 0x61    
   \              0x69 0x6C    
   \              0x61 0x62    
   \   00000020   0x6C 0x65          DC8 6CH, 65H, 20H, 63H, 6CH, 75H, 73H, 74H
   \              0x20 0x63    
   \              0x6C 0x75    
   \              0x73 0x74    
   \   00000028   0x65 0x72          DC8 65H, 72H, 73H, 20H, 3AH, 20H, 25H, 6CH
   \              0x73 0x20    
   \              0x3A 0x20    
   \              0x25 0x6C    
   \   00000030   0x75 0x0A          DC8 75H, 0AH, 73H, 65H, 63H, 74H, 6FH, 72H
   \              0x73 0x65    
   \              0x63 0x74    
   \              0x6F 0x72    
   \   00000038   0x73 0x2F          DC8 73H, 2FH, 63H, 6CH, 75H, 73H, 74H, 65H
   \              0x63 0x6C    
   \              0x75 0x73    
   \              0x74 0x65    
   \   00000040   0x72 0x20          DC8 72H, 20H, 20H, 20H, 20H, 3AH, 20H, 25H
   \              0x20 0x20    
   \              0x20 0x3A    
   \              0x20 0x25    
   \   00000048   0x75 0x0A          DC8 75H, 0AH, 62H, 79H, 74H, 65H, 73H, 20H
   \              0x62 0x79    
   \              0x74 0x65    
   \              0x73 0x20    
   \   00000050   0x70 0x65          DC8 70H, 65H, 72H, 20H, 73H, 65H, 63H, 74H
   \              0x72 0x20    
   \              0x73 0x65    
   \              0x63 0x74    
   \   00000058   0x6F 0x72          DC8 6FH, 72H, 20H, 20H, 20H, 3AH, 20H, 25H
   \              0x20 0x20    
   \              0x20 0x3A    
   \              0x20 0x25    
   \   00000060   0x75 0x0A          DC8 75H, 0AH, 0
   \              0x00         
   \   00000063   0x00               DC8 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_0:
   \   00000000   0x77 0x00          DC8 "w"

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_3:
   \   00000000   0x72 0x00          DC8 "r"

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x25 0x73          DC8 "%s"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x6C 0x6F          DC8 "log"
   \              0x67 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x25 0x64          DC8 "%d"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x25 0x73          DC8 "%s\012"
   \              0x0A 0x00    
    379          
    380          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Create_Directory
         8   -> FS_MkDir
         8   -> FS_OpenDir
         0   -> sprintf
       8   Del_Directory
         8   -> FS_CloseDir
         8   -> FS_OpenDir
         8   -> FS_RmDir
         0   -> sprintf
       8   Delete_File
         8   -> FS_FClose
         8   -> FS_FOpen
         8   -> FS_Remove
         8   -> sprintf
      56   Log_File
        56   -> FS_ClearErr
        56   -> FS_FClose
        56   -> FS_FError
        56   -> FS_FOpen
        56   -> FS_FWrite
        56   -> FS_Remove
        56   -> Get_Time_Now
        56   -> Read_File
        56   -> Write_File
        56   -> sprintf
        56   -> strcat
        56   -> strcpy
        56   -> strlen
      16   Read_Directory
        16   -> FS_CloseDir
        16   -> FS_OpenDir
        16   -> FS_ReadDir
         0   -> printf
        16   -> sprintf
        16   -> strcat
        16   -> strlen
      16   Read_File
        16   -> FS_ClearErr
        16   -> FS_FClose
        16   -> FS_FError
        16   -> FS_FOpen
        16   -> FS_FRead
        16   -> sprintf
      16   Rename_File
        16   -> FS_FClose
        16   -> FS_FOpen
        16   -> FS_Remove
        16   -> Read_File
        16   -> Write_File
        16   -> sprintf
      24   Show_Free
        24   -> FS_IoCtl
        24   -> sprintf
      24   Write_File
        24   -> FS_ClearErr
        24   -> FS_FClose
        24   -> FS_FError
        24   -> FS_FOpen
        24   -> FS_FWrite
        24   -> sprintf
        24   -> strlen


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable23
       4  ??DataTable23_1
       4  ??DataTable28
       4  ??DataTable28_1
       4  ??DataTable28_10
       4  ??DataTable28_2
       4  ??DataTable28_3
       4  ??DataTable28_4
       4  ??DataTable28_5
       4  ??DataTable28_6
       4  ??DataTable28_7
       4  ??DataTable28_8
       4  ??DataTable28_9
       6  ?Subroutine0
      10  ?Subroutine1
       2  ?_0
      44  ?_1
       4  ?_10
       4  ?_11
       4  ?_12
       4  ?_13
      28  ?_14
      32  ?_15
      32  ?_16
      32  ?_17
       4  ?_18
     100  ?_19
      28  ?_2
       2  ?_3
      36  ?_4
      28  ?_5
      28  ?_6
      28  ?_7
      28  ?_8
      12  ?_9
      40  Create_Directory
      44  Del_Directory
      56  Delete_File
     512  FileBuffer
      28  Fstr
          pDir
          pDirEnt
     506  Log_File
      86  Read_Directory
     104  Read_File
     106  Rename_File
      50  Show_Free
     108  Write_File
      72  name
          logCount
          pFile
          name1

 
   540 bytes in section .bss
    72 bytes in section .data
    24 bytes in section .rodata
 1 624 bytes in section .text
 
 1 624 bytes of CODE  memory
    24 bytes of CONST memory
   612 bytes of DATA  memory

Errors: none
Warnings: none
