###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       09/Feb/2018  16:15:06
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\HW Projects\ControlHome\CntrHome -
#        RF69w\uC-FatFS\device\Mmc\sdcrc.c
#    Command line =  
#        "E:\HW Projects\ControlHome\CntrHome -
#        RF69w\uC-FatFS\device\Mmc\sdcrc.c" -lCN "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\Debug\List" -o "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\Debug\Obj" --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\APP\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\BSP\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\CPU\inc\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-CPU\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-RTC\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-LIB\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uCOS-II\Ports\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uCOS-II\Source\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\I2C-Out\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\Direct_Sw\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\Wdt_led\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-LCD\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-RF\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\api\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\config\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\os\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\fsl\fat\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\clib\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\lbl\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\device\mmc\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-FatFS\file\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-Terminal\src\" -I "E:\HW
#        Projects\ControlHome\CntrHome - RF69w\uC-Terminal\inc\" -Oh
#    List file    =  
#        E:\HW Projects\ControlHome\CntrHome - RF69w\Debug\List\sdcrc.lst
#    Object file  =  
#        E:\HW Projects\ControlHome\CntrHome - RF69w\Debug\Obj\sdcrc.o
#
###############################################################################

E:\HW Projects\ControlHome\CntrHome - RF69w\uC-FatFS\device\Mmc\sdcrc.c
      1          /****************************************Copyright (c)**************************************************
      2          **                               Hangzhou yh software  Co.,LTD.
      3          **                                     
      4          **                                 http://www.armgcc.com
      5          **
      6          **--------------File Info-------------------------------------------------------------------------------
      7          ** File name:			sdcrc.c
      8          ** Last modified Date:	2007-10-15
      9          ** Last Version:		V1.0
     10          ** Descriptions:		SD/MMC 卡读写模块: 相关工具函数 ---- CRC校验
     11          **						Soft Packet of SD Card Driver: tool funcitons about sd card ---- crc check
     12          **
     13          **------------------------------------------------------------------------------------------------------
     14          ** Created by:			lhlzjut@hotmail.com
     15          ** Created date:		2007-10-15
     16          ** Version:				V1.0
     17          ** Descriptions:		The original version
     18          **
     19          **------------------------------------------------------------------------------------------------------
     20          ********************************************************************************************************/
     21          #include "sdcrc.h"
     22          
     23          #if SD_CRC_EN
     24          //X16 + X12 + X5 + 1 余式表

   \                                 In section .text, align 4, keep-with-next
     25          INT16U const CRCTable[256]={0x0000,0x1021,0x2042,0x3063,0x4084,0x50a5,0x60c6,0x70e7,
   \                     CRCTable:
   \   00000000   0x0000 0x1021      DC16 0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161
   \              0x2042 0x3063
   \              0x4084 0x50A5
   \              0x60C6 0x70E7
   \              0x8108 0x9129
   \   00000014   0xA14A 0xB16B      DC16 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786
   \              0xC18C 0xD1AD
   \              0xE1CE 0xF1EF
   \              0x1231 0x0210
   \              0x3273 0x2252
   \   00000028   0x52B5 0x4294      DC16 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205
   \              0x72F7 0x62D6
   \              0x9339 0x8318
   \              0xB37B 0xA35A
   \              0xD3BD       
   \   0000003A   0xC39C 0xF3FF      DC16 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572
   \              0xE3DE 0x2462
   \              0x3443 0x0420
   \              0x1401 0x64E6
   \              0x74C7 0x44A4
   \   0000004E   0x5485 0xA56A      DC16 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669
   \              0xB54B 0x8528
   \              0x9509 0xE5EE
   \              0xF5CF 0xC5AC
   \              0xD58D       
   \   00000060   0x3653 0x2672      DC16 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874
   \              0x1611 0x0630
   \              0x76D7 0x66F6
   \              0x5695 0x46B4
   \              0xB75B 0xA77A
   \   00000074   0x9719 0x8738      DC16 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758
   \              0xF7DF 0xE7FE
   \              0xD79D 0xC7BC
   \              0x48C4 0x58E5
   \              0x6886       
   \   00000086   0x78A7 0x0840      DC16 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144
   \              0x1861 0x2802
   \              0x3823 0xC9CC
   \              0xD9ED 0xE98E
   \              0xF9AF 0x8948
   \   0000009A   0x9969 0xA90A      DC16 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899
   \              0xB92B 0x5AF5
   \              0x4AD4 0x7AB7
   \              0x6A96 0x1A71
   \              0x0A50 0x3A33
   \   000000AE   0x2A12 0xDBFD      DC16 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802
   \              0xCBDC 0xFBBF
   \              0xEB9E 0x9B79
   \              0x8B58 0xBB3B
   \              0xAB1A       
   \   000000C0   0x6CA6 0x7C87      DC16 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911
   \              0x4CE4 0x5CC5
   \              0x2C22 0x3C03
   \              0x0C60 0x1C41
   \              0xEDAE 0xFD8F
   \   000000D4   0xCDEC 0xDDCD      DC16 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277
   \              0xAD2A 0xBD0B
   \              0x8D68 0x9D49
   \              0x7E97 0x6EB6
   \              0x5ED5       
   \   000000E6   0x4EF4 0x3E13      DC16 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923
   \              0x2E32 0x1E51
   \              0x0E70 0xFF9F
   \              0xEFBE 0xDFDD
   \              0xCFFC 0xBF1B
   \   000000FA   0xAF3A 0x9F59      DC16 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453
   \              0x8F78 0x9188
   \              0x81A9 0xB1CA
   \              0xA1EB 0xD10C
   \              0xC12D       
   \   0000010C   0xF14E 0xE16F      DC16 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679
   \              0x1080 0x00A1
   \              0x30C2 0x20E3
   \              0x5004 0x4025
   \              0x7046 0x6067
   \   00000120   0x83B9 0x9398      DC16 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752
   \              0xA3FB 0xB3DA
   \              0xC33D 0xD31C
   \              0xE37F 0xF35E
   \              0x02B1 0x1290
   \   00000134   0x22F3 0x32D2      DC16 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312
   \              0x4235 0x5214
   \              0x6277 0x7256
   \              0xB5EA 0xA5CB
   \              0x95A8       
   \   00000146   0x8589 0xF56E      DC16 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798
   \              0xE54F 0xD52C
   \              0xC50D 0x34E2
   \              0x24C3 0x14A0
   \              0x0481 0x7466
   \   0000015A   0x6447 0x5424      DC16 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358
   \              0x4405 0xA7DB
   \              0xB7FA 0x8799
   \              0x97B8 0xE75F
   \              0xF77E       
   \   0000016C   0xC71D 0xD73C      DC16 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068
   \              0x26D3 0x36F2
   \              0x0691 0x16B0
   \              0x6657 0x7676
   \              0x4615 0x5634
   \   00000180   0xD94C 0xC96D      DC16 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596
   \              0xF90E 0xE92F
   \              0x99C8 0x89E9
   \              0xB98A 0xA9AB
   \              0x5844       
   \   00000192   0x4865 0x7806      DC16 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223
   \              0x6827 0x18C0
   \              0x08E1 0x3882
   \              0x28A3 0xCB7D
   \              0xDB5C 0xEB3F
   \   000001A6   0xFB1E 0x8BF9      DC16 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254
   \              0x9BD8 0xABBB
   \              0xBB9A 0x4A75
   \              0x5A54 0x6A37
   \              0x7A16       
   \   000001B8   0x0AF1 0x1AD0      DC16 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427
   \              0x2AB3 0x3A92
   \              0xFD2E 0xED0F
   \              0xDD6C 0xCD4D
   \              0xBDAA 0xAD8B
   \   000001CC   0x9DE8 0x8DC9      DC16 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265
   \              0x7C26 0x6C07
   \              0x5C64 0x4C45
   \              0x3CA2 0x2C83
   \              0x1CE0 0x0CC1
   \   000001E0   0xEF1F 0xFF3E      DC16 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183
   \              0xCF5D 0xDF7C
   \              0xAF9B 0xBFBA
   \              0x8FD9 0x9FF8
   \              0x6E17       
   \   000001F2   0x7E36 0x4E55      DC16 32310, 20053, 24180, 11923, 16050, 3793, 7920
   \              0x5E74 0x2E93
   \              0x3EB2 0x0ED1
   \              0x1EF0       
     26             			    0x8108,0x9129,0xa14a,0xb16b,0xc18c,0xd1ad,0xe1ce,0xf1ef,
     27          			    0x1231,0x0210,0x3273,0x2252,0x52b5,0x4294,0x72f7,0x62d6,
     28          			    0x9339,0x8318,0xb37b,0xa35a,0xd3bd,0xc39c,0xf3ff,0xe3de,
     29          			    0x2462,0x3443,0x0420,0x1401,0x64e6,0x74c7,0x44a4,0x5485,
     30          			    0xa56a,0xb54b,0x8528,0x9509,0xe5ee,0xf5cf,0xc5ac,0xd58d,
     31          			    0x3653,0x2672,0x1611,0x0630,0x76d7,0x66f6,0x5695,0x46b4,
     32          			    0xb75b,0xa77a,0x9719,0x8738,0xf7df,0xe7fe,0xd79d,0xc7bc,
     33          			    0x48c4,0x58e5,0x6886,0x78a7,0x0840,0x1861,0x2802,0x3823,
     34          			    0xc9cc,0xd9ed,0xe98e,0xf9af,0x8948,0x9969,0xa90a,0xb92b,
     35          			    0x5af5,0x4ad4,0x7ab7,0x6a96,0x1a71,0x0a50,0x3a33,0x2a12,
     36          			    0xdbfd,0xcbdc,0xfbbf,0xeb9e,0x9b79,0x8b58,0xbb3b,0xab1a,
     37          			    0x6ca6,0x7c87,0x4ce4,0x5cc5,0x2c22,0x3c03,0x0c60,0x1c41,
     38          			    0xedae,0xfd8f,0xcdec,0xddcd,0xad2a,0xbd0b,0x8d68,0x9d49,
     39          			    0x7e97,0x6eb6,0x5ed5,0x4ef4,0x3e13,0x2e32,0x1e51,0x0e70,
     40          			    0xff9f,0xefbe,0xdfdd,0xcffc,0xbf1b,0xaf3a,0x9f59,0x8f78,
     41          			    0x9188,0x81a9,0xb1ca,0xa1eb,0xd10c,0xc12d,0xf14e,0xe16f,
     42          			    0x1080,0x00a1,0x30c2,0x20e3,0x5004,0x4025,0x7046,0x6067,
     43          			    0x83b9,0x9398,0xa3fb,0xb3da,0xc33d,0xd31c,0xe37f,0xf35e,
     44          			    0x02b1,0x1290,0x22f3,0x32d2,0x4235,0x5214,0x6277,0x7256,
     45          			    0xb5ea,0xa5cb,0x95a8,0x8589,0xf56e,0xe54f,0xd52c,0xc50d,
     46          			    0x34e2,0x24c3,0x14a0,0x0481,0x7466,0x6447,0x5424,0x4405,
     47          			    0xa7db,0xb7fa,0x8799,0x97b8,0xe75f,0xf77e,0xc71d,0xd73c,
     48          			    0x26d3,0x36f2,0x0691,0x16b0,0x6657,0x7676,0x4615,0x5634,
     49          			    0xd94c,0xc96d,0xf90e,0xe92f,0x99c8,0x89e9,0xb98a,0xa9ab,
     50          			    0x5844,0x4865,0x7806,0x6827,0x18c0,0x08e1,0x3882,0x28a3,
     51          			    0xcb7d,0xdb5c,0xeb3f,0xfb1e,0x8bf9,0x9bd8,0xabbb,0xbb9a,
     52          			    0x4a75,0x5a54,0x6a37,0x7a16,0x0af1,0x1ad0,0x2ab3,0x3a92,
     53          			    0xfd2e,0xed0f,0xdd6c,0xcd4d,0xbdaa,0xad8b,0x9de8,0x8dc9,
     54          			    0x7c26,0x6c07,0x5c64,0x4c45,0x3ca2,0x2c83,0x1ce0,0x0cc1,
     55          			    0xef1f,0xff3e,0xcf5d,0xdf7c,0xaf9b,0xbfba,0x8fd9,0x9ff8,
     56          			    0x6e17,0x7e36,0x4e55,0x5e74,0x2e93,0x3eb2,0x0ed1,0x1ef0
     57          			  };
     58          
     59          /********************************************************************************************************************
     60          ** Name:	  INT8U SD_GetCRC16()
     61          ** Function:      calculate CRC16 
     62          ** Input:         INT8U *pSource: data
     63          **  	          INT16U len    : len
     64          ** Output:	  CRC16 code
     65          ********************************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     66          INT16U SD_GetCRC16(INT8U *pSource, INT16U len)
     67          {
   \                     SD_GetCRC16: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
     68          	INT16U i;
     69          	INT16U result = 0;
   \   00000002   0x2200             MOVS     R2,#+0
     70          
     71          	for (i = 0; i < len; i++)
   \   00000004   0xB161             CBZ.N    R1,??SD_GetCRC16_0
   \   00000006   0x.... 0x....      ADR.W    R3,CRCTable
     72          	    result = (result << 8) ^ (INT16U)CRCTable[(result >> 8) ^ *pSource++];
   \                     ??SD_GetCRC16_1: (+1)
   \   0000000A   0xF810 0x5B01      LDRB     R5,[R0], #+1
   \   0000000E   0xEA85 0x2422      EOR      R4,R5,R2, ASR #+8
   \   00000012   0xF833 0x4014      LDRH     R4,[R3, R4, LSL #+1]
   \   00000016   0xEA84 0x2202      EOR      R2,R4,R2, LSL #+8
   \   0000001A   0x1E49             SUBS     R1,R1,#+1
   \   0000001C   0xB292             UXTH     R2,R2
   \   0000001E   0xD1F4             BNE.N    ??SD_GetCRC16_1
     73          	
     74          	return result;
   \                     ??SD_GetCRC16_0: (+1)
   \   00000020   0xBC30             POP      {R4,R5}
   \   00000022   0x4610             MOV      R0,R2
   \   00000024   0x4770             BX       LR               ;; return
     75          }
     76          
     77          /*******************************************************************************************************************
     78          ** Name:	  INT8U SD_GetCmdByte6()
     79          ** Function:      get the CRC7 of the command of SD card
     80          ** Input:         INT8U cmd   :	command
     81          **    	          INT8U *param: the param of command,length is 4 bytes
     82          ** Output:	  CRC7 code
     83          ********************************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     84          INT8U SD_GetCmdByte6(INT8U cmd, INT8U *param)
     85          {
   \                     SD_GetCmdByte6: (+1)
   \   00000000   0xB41C             PUSH     {R2-R4}
     86          	INT8U i, j;
     87          	INT8U reg = 0;
     88          	INT8U array[5];
     89          	
     90          	array[0] = cmd;
   \   00000002   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000006   0x2200             MOVS     R2,#+0
     91          	for (i = 1; i < 5; i++)						
     92          		array[i] = param[4 - i];
   \   00000008   0x78CB             LDRB     R3,[R1, #+3]
   \   0000000A   0xF88D 0x3001      STRB     R3,[SP, #+1]
   \   0000000E   0x788B             LDRB     R3,[R1, #+2]
   \   00000010   0xF88D 0x3002      STRB     R3,[SP, #+2]
   \   00000014   0x784B             LDRB     R3,[R1, #+1]
   \   00000016   0xF88D 0x3003      STRB     R3,[SP, #+3]
   \   0000001A   0x7808             LDRB     R0,[R1, #+0]
   \   0000001C   0xF88D 0x0004      STRB     R0,[SP, #+4]
     93          	
     94          	for (i = 0; i < 5; i++)						/* CRC7 */
   \   00000020   0x2105             MOVS     R1,#+5
   \   00000022   0x4668             MOV      R0,SP
     95          	{
     96          	    for (j = 0; j < 8; j++)
   \                     ??SD_GetCmdByte6_0: (+1)
   \   00000024   0x2300             MOVS     R3,#+0
     97          	    {
     98          			reg <<= 1;
     99          			reg ^= ((((array[i] << j) ^ reg) & 0x80) ? 0x9 : 0);
   \                     ??SD_GetCmdByte6_1: (+1)
   \   00000026   0x7804             LDRB     R4,[R0, #+0]
   \   00000028   0x0652             LSLS     R2,R2,#+25
   \   0000002A   0x409C             LSLS     R4,R4,R3
   \   0000002C   0xEA84 0x6412      EOR      R4,R4,R2, LSR #+24
   \   00000030   0x0624             LSLS     R4,R4,#+24
   \   00000032   0xBF4C             ITE      MI 
   \   00000034   0x2409             MOVMI    R4,#+9
   \   00000036   0x2400             MOVPL    R4,#+0
    100          	    }
   \   00000038   0x1C5B             ADDS     R3,R3,#+1
   \   0000003A   0x2B08             CMP      R3,#+8
   \   0000003C   0xEA84 0x6212      EOR      R2,R4,R2, LSR #+24
   \   00000040   0xDBF1             BLT.N    ??SD_GetCmdByte6_1
    101          	}
   \   00000042   0x1C40             ADDS     R0,R0,#+1
   \   00000044   0x1E49             SUBS     R1,R1,#+1
   \   00000046   0xD1ED             BNE.N    ??SD_GetCmdByte6_0
    102          	
    103          	return ((reg << 1) + 0x01) ;				
   \   00000048   0x0050             LSLS     R0,R2,#+1
   \   0000004A   0xBC16             POP      {R1,R2,R4}
   \   0000004C   0x1C40             ADDS     R0,R0,#+1
   \   0000004E   0xB2C0             UXTB     R0,R0
   \   00000050   0x4770             BX       LR               ;; return
    104          }
    105          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SD_GetCRC16
      12   SD_GetCmdByte6


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     512  CRCTable
      38  SD_GetCRC16
      82  SD_GetCmdByte6

 
 632 bytes in section .text
 
 632 bytes of CODE memory

Errors: none
Warnings: none
